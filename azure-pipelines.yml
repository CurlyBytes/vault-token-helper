trigger: # run on all commits to master branch
  branches:
    include:
    - master

pr: # run pipeline on PRs
  branches:
    include:
    - '*'

resources:
  containers:
  - container: linux
    image: golang:1.14
    # XXX: hack to install sudo inside the docker container - https://github.com/Microsoft/azure-pipelines-agent/issues/2043
    options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

stages:

  - stage: test
    jobs:
    - job: linux
      pool:
        vmImage: 'ubuntu-16.04' # this is the only pool image that can run linux containers - https://docs.microsoft.com/en-us/azure/devops/pipelines/process/container-phases?view=azure-devops&tabs=yaml
      container: linux
      steps:
      - script: |
          # XXX: hack to install sudo inside the docker container - https://github.com/Microsoft/azure-pipelines-agent/issues/2043
          /tmp/docker exec -t -u 0 ci-container \
          sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
        displayName: Set up sudo
      - script: go get
        displayName: Install go deps
      - script: |
          set -e
          sudo apt-get -qy update
          sudo apt-get -qy install pass
        displayName: Install package deps
      - script: make test
        env:
          CI: "true"
        displayName: make test

    - job: macos
      pool:
        vmImage: 'macOS-10.14'
      steps:
      - script: |
          brew install pass
        displayName: Install package deps
      - script: go get
        displayName: Install go deps
      - script: make test
        env:
          CI: "true"
        displayName: make test

    - job: windows
      pool:
        vmImage: 'windows-2019'
      steps:
      - script: go get
        displayName: Install go deps
      - pwsh: make test
        env:
          CI: "true"
        displayName: make test

  - stage: release_test
    jobs:
    - job: release_test
      pool:
        vmImage: 'ubuntu-16.04' # this is the only pool image that can run linux containers - https://docs.microsoft.com/en-us/azure/devops/pipelines/process/container-phases?view=azure-devops&tabs=yaml
      steps:
      - script: make snapshot
        displayName: make snapshot

  - stage: release
    jobs:
    - job: release
      # only generate releases on master branches.
      condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
      pool:
        vmImage: 'ubuntu-16.04' # this is the only pool image that can run linux containers - https://docs.microsoft.com/en-us/azure/devops/pipelines/process/container-phases?view=azure-devops&tabs=yaml
      steps:
      - task: DownloadSecureFile@1
        name: gpg_signing_key
        inputs:
          secureFile: 'vault-token-helper.signing-key.gpg'
      - script: |
          set -e
          # XXX: not sure if this is the best approach here. Without this, autotag will fail
          # with 'error getting head commit: object does not exist'. It should be ok for now,
          # since we only cut releases from master.
          git checkout master
          git reset --hard $(Build.SourceVersion)

          curl -s https://api.github.com/repos/pantheon-systems/autotag/releases/latest | \
            grep browser_download | \
            grep -i linux | \
            cut -d '"' -f 4 | \
            xargs curl -o ~/autotag -L \
            && chmod 755 ~/autotag
          ~/autotag

          export GPG_KEY=`cat $(gpg_signing_key.secureFilePath) | base64`
          make release
        env:
          GITHUB_TOKEN: $(GITHUB_TOKEN)
        displayName: make release